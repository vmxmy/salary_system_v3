version: '3.8'

services:
  salary-system-web:
    image: ${IMAGE_TAG:-salary-system-v3:latest}
    container_name: salary-system-web
    restart: unless-stopped
    ports:
      # 使用非标准端口避免与1Panel OpenResty冲突
      - "3001:80"
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      # 1Panel环境标识
      - DEPLOYMENT_TYPE=1panel
    volumes:
      # 日志目录映射到1Panel可管理的位置
      - /opt/salary-system/logs:/var/log/nginx
      # 备份和数据目录
      - /opt/salary-system/backups:/app/backups
    networks:
      - salary-network
    labels:
      # 1Panel标签
      - "1panel.enable=true"
      - "1panel.name=salary-system"
      - "1panel.port=3001"
      - "1panel.url=http://localhost:3001"
      # Traefik标签（如果1Panel使用Traefik）
      - "traefik.enable=true"
      - "traefik.http.routers.salary-system.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.salary-system.loadbalancer.server.port=80"
      - "traefik.http.routers.salary-system.entrypoints=web"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # 1Panel环境的资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

# 日志轮转配置
  logrotate:
    image: linkyard/docker-logrotate:latest
    container_name: salary-system-logrotate
    restart: unless-stopped
    volumes:
      - /opt/salary-system/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LOGROTATE_CONF=/etc/logrotate.d/salary-system
    depends_on:
      - salary-system-web

volumes:
  salary-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/salary-system/logs

networks:
  salary-network:
    driver: bridge
    name: salary-system-network