name: Database Migration & Backup

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/migrations/**'
  workflow_dispatch:
    inputs:
      migration_action:
        description: '迁移操作'
        required: true
        default: 'migrate'
        type: choice
        options:
        - migrate
        - backup
        - restore

jobs:
  database-migration:
    name: Database Migration
    runs-on: ubuntu-latest
    if: github.event.inputs.migration_action == 'migrate' || github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest
        
    - name: Create backup before migration
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        echo "📦 创建迁移前备份..."
        supabase db dump --project-ref $SUPABASE_PROJECT_REF > backup-$(date +%Y%m%d_%H%M%S).sql
        
    - name: Link project
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        supabase link --project-ref $SUPABASE_PROJECT_REF
        
    - name: Check migration status
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      run: |
        cd supabase
        echo "📋 检查迁移状态..."
        supabase migration list
        
    - name: Apply migrations
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      run: |
        cd supabase
        echo "🚀 应用数据库迁移..."
        supabase db push
        
    - name: Verify migration
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      run: |
        cd supabase
        echo "✅ 验证迁移结果..."
        supabase migration list
        
    - name: Upload backup artifact
      uses: actions/upload-artifact@v4
      with:
        name: database-backup-${{ github.run_number }}
        path: supabase/backup-*.sql
        retention-days: 30

  database-backup:
    name: Database Backup
    runs-on: ubuntu-latest
    if: github.event.inputs.migration_action == 'backup'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest
        
    - name: Create full backup
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        echo "💾 创建完整数据库备份..."
        supabase db dump --project-ref $SUPABASE_PROJECT_REF > full-backup-$(date +%Y%m%d_%H%M%S).sql
        
    - name: Upload backup
      uses: actions/upload-artifact@v4
      with:
        name: full-backup-${{ github.run_number }}
        path: supabase/full-backup-*.sql
        retention-days: 90

  # 定期备份（可选）
  scheduled-backup:
    name: Scheduled Backup
    runs-on: ubuntu-latest
    # 每周日凌晨 2 点执行备份
    if: github.event.schedule == '0 2 * * 0'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest
        
    - name: Create scheduled backup
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        echo "⏰ 创建定期备份..."
        supabase db dump --project-ref $SUPABASE_PROJECT_REF > weekly-backup-$(date +%Y%m%d).sql
        
    - name: Upload scheduled backup
      uses: actions/upload-artifact@v4
      with:
        name: weekly-backup-${{ github.run_number }}
        path: supabase/weekly-backup-*.sql
        retention-days: 365