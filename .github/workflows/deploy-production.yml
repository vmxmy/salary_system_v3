name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'ÈÉ®ÁΩ≤ÁéØÂ¢É'
        required: true
        default: 'github-pages'
        type: choice
        options:
        - github-pages
        - staging

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'github-pages' }}
    runs-on: ubuntu-latest
    
    environment: 
      name: ${{ github.event.inputs.environment || 'github-pages' }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build for production
      working-directory: ./frontend
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        NODE_ENV: production
      run: npm run build:prod
      
    - name: Deploy to Vercel
      if: success()
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
        
    - name: Update Supabase Edge Functions
      if: success()
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        npx supabase functions deploy --project-ref $SUPABASE_PROJECT_REF
        
    - name: Run database migrations
      if: success()
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      run: |
        cd supabase
        npx supabase db push --project-ref $SUPABASE_PROJECT_REF
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ ÈÉ®ÁΩ≤ÊàêÂäüÔºÅ"
        echo "ÁéØÂ¢É: ${{ github.event.inputs.environment || 'github-pages' }}"
        echo "ÁâàÊú¨: ${{ github.ref }}"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•ÔºÅ"
        echo "ËØ∑Ê£ÄÊü•Êó•ÂøóÂπ∂‰øÆÂ§çÈóÆÈ¢ò„ÄÇ"